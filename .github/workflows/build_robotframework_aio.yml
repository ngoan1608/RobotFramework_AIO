name: Build RobotFramework AIO packages

on:
  push:
    tags:
      - "rel/aio/*.*.*.*"
      - "dev/aio/*.*.*.*"
  pull_request:
    types:
      - closed
      - opened
      - synchronize
    branches: 
      - develop
  workflow_dispatch:

  repository_dispatch:
    types:
      - TRIGGER_AIO

env:
  GITHUB_PAT : ${{ secrets.PAT_GITHUB }} 
  GH_TOKEN: ${{ github.token }}
  TRIGGER_BY: ${{ github.ref_type }}
  TAG_NAME: ${{ github.ref_name }}
  REF_NAME: ${{ github.ref_name }}
  DEFAULT_REF: ${{ github.base_ref }}
  MAINDOC_CONFIGFILE: --configfile "./maindoc/maindoc_configs/maindoc_config_OSS.json"
  AIO_NAME: "RobotFramework AIO"
  BUNDLE_NAME: --bundle_name "RobotFramework AIO"
  GENDOC_PLANTUML_PATH: "../robotvscode/data/extensions/jebbs.plantuml-2.17.5"
  INSTALLER_LOCATION: "https://github.com/test-fullautomation/RobotFramework_AIO/releases"
  GITHUB_COPILOT_REF_URL: "https://docs.github.com/en/enterprise-cloud@latest/copilot/managing-copilot/managing-copilot-as-an-individual-subscriber/managing-your-copilot-subscription"
  GITHUB_COPILOT_EXT_ARG: ""
  REPO_CONFIG: "./config/repositories/repositories.conf"
  TEST_CONFIG: "./config/testtrigger_config.json"
  REPO_CONFIG_NO_RBFW: "./config/repositories/repositories_no_robotframework.conf"
  TEST_CONFIG_NO_RBFW: "./config/testtrigger_config_no_robotframework.json"

jobs:

  build-linux:
    strategy:
      fail-fast: false
      matrix:
        version: [basic, custom]
    name: Build Linux packages
    runs-on: ubuntu-latest
    if: ${{ ! failure() && ! cancelled() }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install dependencies and set environment variables
        run: |
          sudo apt-get update
          sudo apt-get install --fix-missing
          chmod +x ./requirements_linux.sh
          ./requirements_linux.sh
          echo "AIO_VERSION_DATE=$(date +%m.%Y)" >> $GITHUB_ENV
          echo "AIO_VERSION=${TAG_NAME#[rd]e[vl]/aio/}" >> $GITHUB_ENV
          echo "BUNDLE_VERSION_DATE=--bundle_version_date \"$(date +%m.%Y)\"" >> $GITHUB_ENV
          echo "BUNDLE_VERSION=--bundle_version \"${TAG_NAME#[rd]e[vl]/aio/}\"" >> $GITHUB_ENV
          # Environment variable for trigger process
          echo "REPOSITORY=${{needs.trigger-aio.outputs.repository}}" >> $GITHUB_ENV
          echo "PULL_REQUEST_BRANCH=${{needs.trigger-aio.outputs.branch}}" >> $GITHUB_ENV

          # Update placeholders install-github-copilot-exts.sh script
          sed -i "s|\$PLACEHOLDER_REF_URL|${GITHUB_COPILOT_REF_URL}|g" ./install/install-github-copilot-exts.sh

          if [[ ${{ matrix.version }} == "basic" ]];then
            echo "REPO_CONFIG=${REPO_CONFIG_NO_RBFW}" >> $GITHUB_ENV
          fi

      - name: Clone repositories
        run: |
          chmod +x ./cloneall
          export TAG_NAME=develop
          ./cloneall --config-file=${REPO_CONFIG}

      - name: Install
        run: |
          chmod +x ./install/install.sh
          ./install/install.sh

      - name: Build
        run: |
          chmod +x ./build
          ./build --config-file=${REPO_CONFIG} --sub-version=${{ matrix.version }}

      # - name: Update all documents
      #   if: ${{ github.ref_type == 'tag' }}
      #   run: |
      #     cd ../robotframework-documentation
      #     doc_branch=automation/task/update-rfw-documents
      #     git config user.email "huavanthong14@gmail.com"
      #     git config user.name "Thong Hua"
      #     git checkout -b $doc_branch
      #     git remote add doc-repo https://${{ secrets.PAT_THONG }}@github.com/test-fullautomation/robotframework-documentation.git
      #     git add RobotFrameworkAIO/Components.html
      #     git add RobotFrameworkAIO/RobotFrameworkAIO_Reference.pdf
      #     git add RobotFrameworkAIO/Components.rst
      #     git commit -m "Auto update documents in robotframework-documents"
      #     git push -u -f doc-repo $doc_branch
      #     echo -e "\e[32;01mPush all changes completely ... \e[0m"
          
      #     curl -f -X POST https://api.github.com/repos/test-fullautomation/robotframework-documentation/dispatches \
      #     --header 'authorization: Bearer ${{ secrets.PAT_THONG }}' \
      #     -H 'Accept: application/vnd.github.everest-preview+json' \
      #     --data '{"event_type": "Document", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'", "branch" : "'"$doc_branch"'"}}'
      #     if [ $? -ne 0 ]; then
      #       echo "Error: curl command failed to trigger a document jobs"
      #       exit 1
      #     fi

      #     echo -e "\e[32;01m Trigger jobs for pull request  successfully...\e[0m"

      - name: Upload built package
        uses: actions/upload-artifact@v3
        with:
          name: linux-package-${{ matrix.version }}
          path: output_lx/*.deb

      - name: Upload documentation
        uses: actions/upload-artifact@v3
        with:
          name: RobotFrameworkAIO_Reference-${{ matrix.version }}
          path: ${{ runner.workspace }}/robotframework-documentation/RobotFrameworkAIO/RobotFrameworkAIO_Reference.pdf

  build-windows:
    strategy:
      fail-fast: false
      matrix:
        version: [basic, custom]
    name: Build Windows package
    runs-on: windows-latest
    if: ${{ ! failure() && ! cancelled() }}
    steps:
      - name: Support long path in git
        run: git config --system core.longpaths true

      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install dependencies and set environment variables
        shell: bash
        run: |
          . ./requirements_windows.sh
          echo "GENDOC_LATEXPATH=$GENDOC_LATEXPATH" >> $GITHUB_ENV
          echo "AIO_VERSION_DATE=$(date +%m.%Y)" >> $GITHUB_ENV
          echo "AIO_VERSION=${TAG_NAME#[rd]e[vl]/aio/}" >> $GITHUB_ENV
          echo "BUNDLE_VERSION_DATE=--bundle_version_date \"$(date +%m.%Y)\"" >> $GITHUB_ENV
          echo "BUNDLE_VERSION=--bundle_version \"${TAG_NAME#[rd]e[vl]/aio/}\"" >> $GITHUB_ENV
          echo "REPOSITORY=${{needs.trigger-aio.outputs.repository}}" >> $GITHUB_ENV
          echo "PULL_REQUEST_BRANCH=${{needs.trigger-aio.outputs.branch}}" >> $GITHUB_ENV

          # Update placeholders install-github-copilot-exts.sh script
          sed -i "s|\$PLACEHOLDER_REF_URL|${GITHUB_COPILOT_REF_URL}|g" ./install/install-github-copilot-exts.sh

          if [[ ${{ matrix.version }} == "basic" ]];then
            echo "REPO_CONFIG=${REPO_CONFIG_NO_RBFW}" >> $GITHUB_ENV
          fi

      - name: Clone repositories
        shell: bash
        run: |
          chmod +x ./cloneall
          export TAG_NAME=develop
          ./cloneall --config-file=${REPO_CONFIG}

      - name: Install
        shell: bash
        run: ./install/install.sh

      - name: Build
        shell: bash
        run: ./build --config-file=${REPO_CONFIG} --sub-version=${{ matrix.version }}

      - name: Upload built package
        uses: actions/upload-artifact@v3
        with:
          name: windows-package-${{ matrix.version }}
          path: Output/

  release:
    name: Release AIO
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [build-windows, build-linux]
    if: ${{ ! failure() && ! cancelled() && github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/rel/aio/') }}

    steps:
    - name: Download artifact from build workflow
      uses: actions/download-artifact@v3

    - name: Get released version
      run: |
        echo "RELEASE_VERSION=${TAG_NAME#rel/aio/}" >> $GITHUB_ENV

    - name: Create/Update GitHub Release
      id: create_update_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        omitNameDuringUpdate: true
        prerelease: true
        name: RobotFramework AIO version ${{ env.RELEASE_VERSION }}
        artifacts: "windows-package-basic/*.exe,windows-package-custom/*.exe,linux-package-basic/*.deb,linux-package-custom/*.deb,windows-aiotestlogfiles-custom/release_info_RobotFramework_AIO_*.html,RobotFrameworkAIO_Reference-custom/*.pdf"
        bodyFile: "windows-aiotestlogfiles/release_changelog.html"
