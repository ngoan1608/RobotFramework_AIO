name: Build & Test Windows packages
on:
   workflow_call:
      inputs:
         build-type:
            type: string
            required: true
         repo-config:
            type: string 
            required: true
         triggered-repo:
            type: string 
            required: false
         triggered-branch:
            type: string 
            required: false
jobs:
   build:
      name: Build Windows package
      runs-on: windows-latest
      steps:
         - name: Support long path in git
           run: git config --system core.longpaths true
   
         - name: Checkout source
           uses: actions/checkout@v3
   
         - name: Install dependencies and set environment variables
           shell: bash
           run: |
             . ./requirements_windows.sh
             echo "GENDOC_LATEXPATH=$GENDOC_LATEXPATH" >> $GITHUB_ENV
             echo "AIO_VERSION_DATE=$(date +%m.%Y)" >> $GITHUB_ENV
             echo "AIO_VERSION=${TAG_NAME#[rd]e[vl]/aio/}" >> $GITHUB_ENV
             echo "BUNDLE_VERSION_DATE=--bundle_version_date \"$(date +%m.%Y)\"" >> $GITHUB_ENV
             echo "BUNDLE_VERSION=--bundle_version \"${TAG_NAME#[rd]e[vl]/aio/}\"" >> $GITHUB_ENV
             echo "REPOSITORY=${{ inputs.triggered-repo }}" >> $GITHUB_ENV
             echo "PULL_REQUEST_BRANCH=${{ inputs.triggered-branch }}" >> $GITHUB_ENV
   
             # Update placeholders install-github-copilot-exts.sh script
             sed -i "s|\$PLACEHOLDER_REF_URL|${GITHUB_COPILOT_REF_URL}|g" ./install/install-github-copilot-exts.sh
   
         - name: Clone repositories
           shell: bash
           run: |
             chmod +x ./cloneall
             ./cloneall --config-file='${{ inputs.repo-config }}'
   
         - name: Install
           shell: bash
           run: ./install/install.sh
   
         - name: Build
           shell: bash
           run: ./build --config-file='${{ inputs.repo-config }}'
   
         - name: Upload built package
           uses: actions/upload-artifact@v3
           with:
             name: windows-package-${{ inputs.build-type }}
             path: Output/

   install-test-windows:
      name: Test Windows package
      runs-on: windows-latest
      needs: [ build ]
      if: ${{ ! failure() && ! cancelled() }}
      env:
         RobotPythonPath: "C:/Program Files/RobotFramework/python39"
         RobotTutorialPath: "C:/RobotTest/tutorial"
         RobotPythonSitePackagesPath: "C:/Program Files/RobotFramework/python39/Lib/site-packages"
         GENDOC_PLANTUML_PATH: "C:/Program Files/RobotFramework/robotvscode/data/extensions/jebbs.plantuml-2.17.5"

      steps:
         - name: Support long path in git
           run: git config --system core.longpaths true

         - name: Checkout source
           uses: actions/checkout@v3

         - name: Clone repositories
           shell: bash
           run: |
              export REPOSITORY="${{ inputs.triggered-repo }}"
              export PULL_REQUEST_BRANCH="${{ inputs.triggered-branch }}"
              chmod +x ./cloneall
              ./cloneall

         - name: Download Windows installer package
           uses: actions/download-artifact@v3
           with:
              name: windows-package

         - name: Install RobotFramework AIO on Windows
           shell: cmd
           run: ./scripts/install-windows.bat

         - name: Run tests on Windows
           shell: bash
           run: |
              "$RobotPythonPath/python" test/aio-test-trigger/aio-test-trigger.py 2>&1 | tee console_log.txt
              # Get system error code from python program
              exit_code=${PIPESTATUS[0]}
              if [ $exit_code -ne 0 ]; then
                 exit 1
              fi

         - name: Run tests coverage on Windows
           shell: bash
           run: |
              "$RobotPythonPath/python" test/aio-test-trigger/aio-test-coverage.py 2>&1 | tee console_log.txt
              # Get system error code from python program
              exit_code=${PIPESTATUS[0]}

         - name: Generate release info
           shell: cmd
           run: |
              "%RobotPythonPath%\python" .\tools\release_info\release_info.py --configfile ".\release_info_config_OSS.json"
              move .\tools\release_info\release_info_RobotFramework_AIO_*.html ..\
              move .\tools\release_info\release_changelog.html ..\

         - name: Generate tutorial doc
           shell: cmd
           run: |
              "%RobotPythonPath%\python" ..\robotframework-tutorial\__setup\gen_doc_tutorial.py
               
         - name: Upload test result as artifact
           if: success() || failure()
           uses: actions/upload-artifact@v3
           with:
              name: windows-aiotestlogfiles
              # long path issue on Windows when upload artifact 
              # https://github.com/actions/upload-artifact/issues/240
              path: |
                  ${{ runner.workspace }}/[Rr]obotframework*/**/*/aiotestlogfiles/*
                  ${{ runner.workspace }}/[Pp]ython*/**/*/aiotestlogfiles/*
                  ${{ runner.workspace }}/[Rr]obotframework*/**/*/testlogfiles/*
                  ${{ runner.workspace }}/[Pp]ython*/**/*/testlogfiles/*
                  ${{ runner.workspace }}/Robotframework_AIO/console_log.txt
                  ${{ runner.workspace }}/[Rr]obotframework*/**/*/*/coverage_report/*
                  ${{ runner.workspace }}/[Pp]ython*/**/*/*/coverage_report/*
                  ${{ runner.workspace }}/[Rr]obotframework*/**/*/*/coverage_report/*
                  ${{ runner.workspace }}/[Pp]ython*/**/*/*/coverage_report/*
                  ${{ runner.workspace }}/release_info_RobotFramework_AIO_*.html
                  ${{ runner.workspace }}/release_changelog.html
                  ${{ runner.workspace }}/Robotframework_AIO/install-windows.log